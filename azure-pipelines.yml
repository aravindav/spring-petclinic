# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
# Step 1: Checkout the code (automatically handled)
- checkout: self  # Azure DevOps automatically checks out the repository

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

# Step 3: Copy Build Artifacts to Artifact Staging Directory
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/target'  # Path to the folder containing the built .jar/.war files
    Contents: '**/*.jar'  # Include all .jar files
    TargetFolder: '$(Build.ArtifactStagingDirectory)'  # Artifact staging directory

# Step 4: Publish Artifacts (make them available for later stages like deployment)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'  # Path where build artifacts are staged
    ArtifactName: 'drop'  # Name of the artifact
    publishLocation: 'Container'  # Publish to Azure DevOps artifact container
